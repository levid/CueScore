var settings = function() {
    var me = this;
    
    try {
          Titanium.include('/lib/Common.js');
		  Titanium.include('/pages/toolViews/toolsMenuView.js');
    } catch(e) {}

	this.settingsWindow = Titanium.UI.createWindow({
		orientationModes: [Titanium.UI.PORTRAIT]
	});

	this.settingsContainer = Titanium.UI.createView({
		backgroundColor: '#000000',
		top: 0,
		left: 0,
		height: this.getPlatformHeight(),
		width: this.getPlatformWidth()
	});

	this.settingsScrollView = Titanium.UI.createScrollView({
        contentWidth:'auto',
        contentHeight:'auto',
        minZoomScale: 0,
        maxZoomScale: 10,
	    backgroundColor: 'transparent',
		top: 12,
		left: 12,
		height: 390,
		width: 295,
		showPagingControl:true
	});

	this.settingsView = Titanium.UI.createView({
		height: 243,
		width: 243,
		font: {fontSize:13, fontWeight: 'bold', fontFamily:'HelveticaNeue-Bold'}
	});
	this.comingSoon = Titanium.UI.createView({
		backgroundImage: 'images/match/layout/overlay-comingsoon.png',
		backgroundColor: 'transparent',
		top: 20,
		height: 243,
		width: 243
	});
	this.settingsLabel = Titanium.UI.createLabel({
		text: 'test test test test ',
		top: 0,
		left: 0,
		color: '#ffffff',
		height: 1500,
		width: 285,
		font: {fontSize:13, fontWeight: 'bold', fontFamily:'HelveticaNeue-Bold'}
	});
	this.settingsView.add(this.comingSoon);
	
	var toolbarLabel = Titanium.UI.createLabel({
		text: 'Settings',
		color: '#ffffff',
		shadowColor: '#000000',
		textAlign: 'center',
		font: {fontSize:20, fontWeight: 'bold', fontFamily:'HelveticaNeue-Bold'}
	});
	
	titleBar.add(dashboardButton);
	titleBar.add(toolbarLabel);
	
	//this.settingsView.add(this.settingsLabel);

/*
	this.settingsView.addEventListener('click', function(){
        me.settingsWindow.close();
        me.dashboardWindow.show();
    });
    */

	//this.settingsScrollView.add(this.settingsView);
	this.settingsContainer.add(toolsMenuContainer);
	this.settingsContainer.add(titleBar);  //from t
	this.settingsContainer.add(this.settingsView);
	this.settingsWindow.add(this.settingsContainer);

	this.dashboardButton.addEventListener('click', function(){
	   	me.settingsWindow.close();
		me.dashboardWindow.show();
	});

    this.showSettings = function() {
       	if(Ti.Platform.name != 'android') {
            Titanium.UI.iPhone.showStatusBar();
            this.settingsWindow.open({fullscreen:false});
        } else {
            this.settingsWindow.open({fullscreen:true});
        }
    };
    showSettings();
    return this;
};
