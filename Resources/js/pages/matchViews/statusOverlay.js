// Generated by CoffeeScript 1.3.3
(function() {
  var me;

  me = this;

  this.statusOverlayContainer = Ti.UI.createImageView({
    backgroundImage: "/images/match/layout/bg-endgame.png",
    backgroundColor: "transparent",
    top: 44,
    left: 0,
    height: this.getPlatformHeight() - 44,
    width: this.getPlatformWidth(),
    visible: false
  });

  this.statusOverlay = Ti.UI.createView({
    backgroundColor: "transparent",
    width: 215,
    height: 120,
    isNinePatch: false,
    visible: false
  });

  this.statusOverlayMessage = Ti.UI.createView({
    backgroundImage: "images/match/layout/bg-statusmessages.png",
    backgroundColor: "transparent",
    width: 226,
    height: 30,
    isNinePatch: false
  });

  this.statusMessage = Ti.UI.createLabel({
    text: "test",
    color: "#ffffff",
    width: 215,
    textAlign: "center",
    font: {
      fontSize: 13,
      fontWeight: "bold",
      fontFamily: "HelveticaNeue-Bold"
    }
  });

  this.statusOverlayButton = Ti.UI.createButton({
    backgroundImage: "images/match/buttons/btn-continue-match.png",
    top: 80,
    width: 166,
    height: 39,
    color: "#ffffff",
    shadowColor: "#000000",
    shadowOffset: {
      x: 1,
      y: 1
    },
    title: "",
    font: {
      fontSize: 15,
      fontWeight: "bold",
      fontFamily: "HelveticaNeue-Bold"
    },
    isNinePatch: false,
    visible: false
  });

  this.statusOverlayButton.addEventListener("click", function() {
    me.startCurrentMatch();
    return me.fadeOutOverlayFast();
  });

  this.statusOverlayMessage.add(this.statusMessage);

  this.statusOverlay.add(this.statusOverlayMessage);

  this.statusOverlay.add(this.statusOverlayButton);

  this.view.add(this.statusOverlayContainer);

  this.view.add(this.statusOverlay);

  this.fadeOutOverlayFast = function(showOverlayCallback) {
    if (this.statusOverlay.visible === true) {
      return this.statusOverlay.animate({
        opacity: 0,
        duration: 75
      }, function() {
        me.statusOverlay.visible = false;
        me.statusOverlayContainer.visible = false;
        me.statusOverlayButton.visible = false;
        me.statusOverlay.opacity = 0;
        if (showOverlayCallback != null) {
          return showOverlayCallback();
        }
      });
    } else {
      if (showOverlayCallback != null) {
        return showOverlayCallback();
      }
    }
  };

  this.showOverlay = function(message, durationSpeed, actionToDoCallback) {
    return this.fadeOutOverlayFast(function() {
      me.statusMessage.text = message;
      me.statusOverlay.visible = true;
      return me.statusOverlay.animate({
        opacity: 1,
        duration: durationSpeed
      }, function() {
        if (actionToDoCallback != null ? actionToDoCallback() === false : void 0) {
          return;
        }
        return setTimeout((function() {
          return me.statusOverlay.animate({
            opacity: 0,
            duration: durationSpeed
          }, function() {
            statusOverlay.visible = false;
            return statusOverlay.opacity = 0;
          });
        }), 1000);
      });
    });
  };

  this.showOverlayUntilTap = function(message, buttonMessage, durationSpeed) {
    return this.fadeOutOverlayFast(function() {
      me.statusMessage.text = message;
      me.statusOverlayButton.title = buttonMessage;
      me.statusOverlayContainer.visible = true;
      me.statusOverlayButton.visible = true;
      me.statusOverlay.visible = true;
      return me.statusOverlay.animate({
        opacity: 1,
        duration: 400
      }, function() {
        return me.statusOverlay.opacity = 1;
      });
    });
  };

}).call(this);
