// Generated by CoffeeScript 1.3.1
(function() {
  var settings;

  settings = function() {
    var me, toolbarLabel;
    me = this;
    try {
      Ti.include("/js/Common.js");
      Ti.include("/js/pages/toolViews/toolsMenuView.js");
    } catch (_error) {}
    this.settingsWindow = Ti.UI.createWindow({
      orientationModes: [Ti.UI.PORTRAIT]
    });
    this.settingsContainer = Ti.UI.createView({
      backgroundColor: "#000000",
      top: 0,
      left: 0,
      height: this.getPlatformHeight(),
      width: this.getPlatformWidth()
    });
    this.settingsScrollView = Ti.UI.createScrollView({
      contentWidth: "auto",
      contentHeight: "auto",
      minZoomScale: 0,
      maxZoomScale: 10,
      backgroundColor: "transparent",
      top: 12,
      left: 12,
      height: 390,
      width: 295,
      showPagingControl: true
    });
    this.settingsView = Ti.UI.createView({
      height: 243,
      width: 243,
      font: {
        fontSize: 13,
        fontWeight: "bold",
        fontFamily: "HelveticaNeue-Bold"
      }
    });
    this.comingSoon = Ti.UI.createView({
      backgroundImage: "images/match/layout/overlay-comingsoon.png",
      backgroundColor: "transparent",
      top: 20,
      height: 243,
      width: 243
    });
    this.settingsLabel = Ti.UI.createLabel({
      text: "test test test test ",
      top: 0,
      left: 0,
      color: "#ffffff",
      height: 1500,
      width: 285,
      font: {
        fontSize: 13,
        fontWeight: "bold",
        fontFamily: "HelveticaNeue-Bold"
      }
    });
    this.settingsView.add(this.comingSoon);
    toolbarLabel = Ti.UI.createLabel({
      text: "Settings",
      color: "#ffffff",
      shadowColor: "#000000",
      textAlign: "center",
      font: {
        fontSize: 20,
        fontWeight: "bold",
        fontFamily: "HelveticaNeue-Bold"
      }
    });
    titleBar.add(dashboardButton);
    titleBar.add(toolbarLabel);
    this.settingsContainer.add(toolsMenuContainer);
    this.settingsContainer.add(titleBar);
    this.settingsContainer.add(this.settingsView);
    this.settingsWindow.add(this.settingsContainer);
    this.dashboardButton.addEventListener("click", function() {
      me.settingsWindow.close();
      return me.dashboardWindow.show();
    });
    this.showSettings = function() {
      if (Ti.Platform.name !== "android") {
        Ti.UI.iPhone.showStatusBar();
        return this.settingsWindow.open({
          fullscreen: false
        });
      } else {
        return this.settingsWindow.open({
          fullscreen: true
        });
      }
    };
    showSettings();
    return this;
  };

}).call(this);
